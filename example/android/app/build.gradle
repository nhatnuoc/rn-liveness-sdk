apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.livenessrnexample"
    defaultConfig {
        applicationId "com.livenessrnexample"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_8
      targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
      jvmTarget="11"
    }
  buildFeatures {
    buildConfig = true
  }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:1.7.22"
    implementation('androidx.appcompat:appcompat:1.4.1')
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation('com.google.mlkit:face-detection:16.1.5')
    implementation('com.otaliastudios:cameraview:2.7.2')
//    implementation('org.bouncycastle:bcpkix-jdk18on:1.73')
    implementation('com.nimbusds:nimbus-jose-jwt:9.31')
    implementation('commons-codec:commons-codec:1.16.0')

  implementation 'org.bouncycastle:bcpkix-jdk15on:1.64'
  implementation 'org.jmrtd:jmrtd:0.7.18'
  implementation 'com.google.mlkit:face-detection:16.1.5'
  implementation 'com.google.code.gson:gson:2.10.1'

  implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.31'
//    implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'
  implementation('commons-codec:commons-codec:1.16.0')

  // Optional
  implementation 'androidx.multidex:multidex:2.0.1'
  implementation 'com.google.android.material:material:1.8.0'
  implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'com.google.android.gms:play-services-vision-common:19.1.3'

    testImplementation 'junit:junit:4.13.2'
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
  implementation 'com.google.android.gms:play-services-mlkit-text-recognition:18.0.2'
  implementation 'androidx.camera:camera-core:1.0.0-beta05'
  implementation 'androidx.camera:camera-camera2:1.0.0-beta05'
  implementation 'androidx.camera:camera-view:1.1.0-beta03'
  implementation "androidx.camera:camera-lifecycle:1.0.0-beta05"
  implementation 'com.google.guava:guava:29.0-android'
  // ViewModel and LiveData
  implementation "androidx.lifecycle:lifecycle-livedata:2.3.1"
  implementation "androidx.lifecycle:lifecycle-viewmodel:2.3.1"

  // Cardview UI
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation('com.otaliastudios:cameraview:2.7.2')

  implementation 'com.google.android.play:core-ktx:1.8.1'
  implementation 'androidx.appcompat:appcompat:1.4.1'
  implementation 'com.google.android.material:material:1.5.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.1.3'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

  implementation 'androidx.legacy:legacy-support-v4:1.0.0'

  implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])
  implementation(files("libs/Aiot_Library_2.1.aar"))
  implementation(files("libs/CardReader-release.aar"))
  implementation 'com.github.hieudt32:liveness-sdk:4.3.4'
  if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)

configurations.all {
  resolutionStrategy {
    force 'org.bouncycastle:bcpkix-jdk18on:1.73'
  }
}
